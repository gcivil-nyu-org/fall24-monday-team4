language: python
os: linux
dist: jammy 
python:
  - "3.11"

services:
  - postgresql

addons:
  postgresql: '14'

install:
  - pip install -r requirements.txt

before_script:
  - psql -c "DROP DATABASE IF EXISTS $DB_NAME;" -U postgres
  - psql -c "CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';" -U postgres
  - psql -c "CREATE DATABASE $DB_NAME;" -U postgres
  - psql -c "ALTER USER $DB_USER WITH SUPERUSER;" -U postgres
  - python manage.py migrate --no-input
  - python manage.py collectstatic --noinput

before_deploy:
  - if [ "$TRAVIS_BRANCH" = "master" ]; then cp .ebextensions/django.config.master .ebextensions/django.config; fi
  - if [ "$TRAVIS_BRANCH" = "develop" ]; then cp .ebextensions/django.config.dev .ebextensions/django.config; fi
  - if [ "$TRAVIS_BRANCH" = "develop" ]; then cat .ebextensions/django.config; fi
  - zip -r deploy_package.zip . -x "*.git*" -x "**/__pycache__/*" -x "*.pyc" -x "venv/*"

script:
  - black --check .
  - flake8
  - coverage run manage.py test --noinput

after_script:
  - coveralls

deploy:
  - provider: elasticbeanstalk
    access_key_id: $AWS_ACCESS_ID
    secret_access_key: $AWS_ACCESS_KEY
    region: $AWS_REGION
    app: routepals
    env: routepals-prod-env
    bucket_name: $AWS_BUCKET
    zip_file: deploy_package.zip
    on:
      repo: gcivil-nyu-org/fall24-monday-team4
      branch: master
    skip_cleanup: 'true'
  
  - provider: elasticbeanstalk
    access_key_id: $AWS_ACCESS_ID
    secret_access_key: $AWS_ACCESS_KEY
    region: $AWS_REGION
    app: routepals
    env: routepals-dev-env
    bucket_name: $AWS_BUCKET
    zip_file: deploy_package.zip
    on:
      repo: gcivil-nyu-org/fall24-monday-team4
      branch: develop
    skip_cleanup: 'true'